spring:
  application:
    name: databricks-specific-provisioner

server:
  port: 8888

springdoc:
  swagger-ui:
    path: /docs

azure:
  auth:
    clientId: ${AZURE_CLIENT_ID}
    tenantId: ${AZURE_TENANT_ID}
    clientSecret: ${AZURE_CLIENT_SECRET}
    skuType: "" #Allowed only PREMIUM or TRIAL. If different, premium will be set as default

  permissions:
    auth_clientId: ${PERMISSIONS_AZURE_CLIENT_ID}
    auth_tenantId: ${PERMISSIONS_AZURE_TENANT_ID}
    auth_clientSecret: ${PERMISSIONS_AZURE_CLIENT_SECRET}
    subscriptionId: ${AZURE_SUBSCRIPTION_ID}
    resourceGroup: ${AZURE_RESOURCE_GROUP_NAME}
    dpOwnerRoleDefinitionId: ""  #Fill with "no_permissions" or one of the IDs defined at https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles/general
    devGroupRoleDefinitionId: "" #Fill with "no_permissions" or one of the IDs at https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles/general


databricks:
  auth:
    accountId: ${DATABRICKS_ACCOUNT_ID}
  permissions:
    workload:

      owner: "CAN_EDIT"       #CAN_EDIT, CAN_MANAGE, CAN_READ, CAN_RUN, NO_PERMISSIONS
      developer: "CAN_EDIT"   #CAN_EDIT, CAN_MANAGE, CAN_READ, CAN_RUN, NO_PERMISSIONS
    outputPort:
      owner: "SELECT"         #ALL_PRIVILEGES, APPLY_TAG, SELECT
      developer: "SELECT"     #ALL_PRIVILEGES, APPLY_TAG, SELECT

git:
  username: ${GIT_USERNAME}
  token: ${GIT_TOKEN}
  provider: GITLAB

forkjoin:
  parallelism: 16

usecasetemplateid:
  workload:
    job: ["urn:dmb:utm:databricks-workload-job-template"]
    dlt: ["urn:dmb:utm:databricks-workload-dlt-template"]
    workflow: ["urn:dmb:utm:databricks-workload-workflow-template"]
  outputport: ["urn:dmb:utm:databricks-outputport-template"]

misc:
  developmentEnvironmentName: development
